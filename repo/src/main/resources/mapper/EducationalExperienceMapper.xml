<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbjs.hrsrepo.mapper.EducationalExperienceMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.hbjs.hrscommon.domain.hr.EducationalExperienceDO">
        <result column="id" property="id" />
        <result column="pid" property="pid" />
        <result column="school_name" property="schoolName" />
        <result column="start_date" property="startDate" />
        <result column="end_date" property="endDate" />
        <result column="major" property="major" />
        <result column="study_years" property="studyYears" />
        <result column="style" property="style" />
        <result column="education" property="education" />
        <result column="degree" property="degree" />
        <result column="degree_date" property="degreeDate" />
        <result column="degree_company" property="degreeCompany" />
        <result column="education_number" property="educationNumber" />
        <result column="degree_number" property="degreeNumber" />
        <result column="is_highest_education" property="isHighestEducation" />
        <result column="entry_education" property="entryEducation" />
        <result column="is_entry_education" property="isEntryEducation" />
        <result column="witness_name" property="witnessName" />
        <result column="witness_phone" property="witnessPhone" />
        <result column="remarks" property="remarks" />
        <result column="created_by" property="createdBy" />
        <result column="created_date" property="createdDate" />
        <result column="last_modified_by" property="lastModifiedBy" />
        <result column="last_modified_date" property="lastModifiedDate" />
    </resultMap>

    <select id="getEducationalExperiencePage" resultType="com.hbjs.hrscommon.dto.EducationalExperienceDTO">
        select id, pid, school_name, start_date, end_date, major, study_years, style, education, degree, degree_date,
               degree_company, education_number, degree_number, is_highest_education, entry_education, is_entry_education,
               witness_name, witness_phone, remarks,
               created_by, created_date, last_modified_by, last_modified_date
        from hr_educational_experience
        <where>
            <if test="keyword != null and keyword != ''">
                and (school_name like concat ('%', #{keyword}, '%') or education like concat ('%', #{keyword}, '%')
                or major like concat ('%', #{keyword}, '%'))
            </if>
        </where>
    </select>

    <select id="getEducationalExperienceListByPid" resultType="com.hbjs.hrscommon.dto.EducationalExperienceDTO">
        select id, pid, school_name, start_date, end_date, major, study_years, style, education, degree, degree_date,
               degree_company, education_number, degree_number, is_highest_education, entry_education, is_entry_education,
               witness_name, witness_phone, remarks,
               created_by, created_date, last_modified_by, last_modified_date
        from hr_educational_experience
        where pid = #{pid}
    </select>

    <delete id="deleteEducationalExperienceByStaffId">
        delete from hr_educational_experience where pid = #{staffId}
    </delete>

    <select id="getEducationalExperienceExcelList" resultType="com.hbjs.hrscommon.excel.EducationalExperienceExcel">
        select @rownum:=@rownum+1 as rowNum, t.* from (
        select d.name as depName, s.staff_code, s.staff_name,
            e.school_name, e.start_date, e.end_date, e.major, e.study_years, e.style, e.education, e.degree, e.degree_date,
            e.degree_company, e.education_number, e.degree_number, e.is_highest_education, e.entry_education, e.is_entry_education,
            e.witness_name, e.witness_phone, e.remarks
        from hr_educational_experience e
        left join hr_staff s on s.id = e.pid
        left join sys_department d on s.dep_id = d.id
        <where>
            <if test="keyword != null and keyword != ''">
                and (s.staff_code like concat ('%', #{keyword}, '%') or s.staff_name like concat ('%', #{keyword}, '%'))
            </if>
            <if test="depId != null">
                and s.dep_id = #{depId}
            </if>
            <if test="companyState != null and companyState != ''">
                and s.company_state = #{companyState}
            </if>
            <if test="postLevel != null and postLevel != ''">
                and s.post_level = #{postLevel}
            </if>
        </where>
        ) t, (SELECT @rownum:=0) r
    </select>

</mapper>
